{
  "_args": [
    [
      {
        "name": "customize-engine-handlebars",
        "raw": "customize-engine-handlebars@^1.0.0",
        "rawSpec": "^1.0.0",
        "scope": null,
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\akamine\\Documents\\GitHub\\test\\src\\node_modules\\bootprint"
    ]
  ],
  "_from": "customize-engine-handlebars@>=1.0.0 <2.0.0",
  "_hasShrinkwrap": false,
  "_id": "customize-engine-handlebars@1.0.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/customize-engine-handlebars",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/customize-engine-handlebars_1.0.3_1573159331524_0.2697500197156961"
  },
  "_npmUser": {
    "email": "npm@knappi.org",
    "name": "knappi"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "name": "customize-engine-handlebars",
    "raw": "customize-engine-handlebars@^1.0.0",
    "rawSpec": "^1.0.0",
    "scope": null,
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/bootprint"
  ],
  "_resolved": "https://registry.npmjs.org/customize-engine-handlebars/-/customize-engine-handlebars-1.0.3.tgz",
  "_shasum": "79ae82e747049ff60309021d79902de6f6590313",
  "_shrinkwrap": null,
  "_spec": "customize-engine-handlebars@^1.0.0",
  "_where": "C:\\Users\\akamine\\Documents\\GitHub\\test\\src\\node_modules\\bootprint",
  "author": {
    "email": "npm@knappi.org",
    "name": "Nils Knappmeier",
    "url": "https://github.com/nknapp"
  },
  "bugs": {
    "url": "https://github.com/bootprint/customize-engine-handlebars/issues"
  },
  "config": {
    "ghooks": {
      "pre-push": "thoughtful precommit && standard"
    }
  },
  "dependencies": {
    "debug": "^2.2.0",
    "handlebars": "^3.0.3",
    "lodash": "^3.9.3",
    "promised-handlebars": "^1.0.0",
    "q": "^1.4.1",
    "q-deep": "^1.0.1"
  },
  "description": "Use handlebars as engine for customize",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-as-promised": "^5.2.0",
    "customize": "^1.0.0",
    "get-promise": "^1.4.0",
    "ghooks": "^1.0.3",
    "m-io": "^0.5.0",
    "mocha": "^2.4.5",
    "standard": "^14.3.1",
    "thoughtful-release": "^0.3.0",
    "trace-and-clarify-if-possible": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "fileCount": 6,
    "integrity": "sha512-o9XSiASy/rsD7Hzy2MYIG1iGdsf7Nqu3hSSw6pH+TVTLdBNusnPxWTYkqxgUCJUnhIKq2Lx6qixZc9hXQGckYg==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxIGjCRA9TVsSAnZWagAALu4P/jgXifFYRHlBFqNEmWZP\nq/lslfXvmyfrsORiThUUK4+vppzMKNdCZ8fZlDp9mKha1NvPVLbajJV7h8k/\nhzHHpAzZjxsuFIEWrtnYERyV/kFNYBmIY2nirpZXpF4K3GgllIjO6nngwCXH\nU+RtOJqpTAUYBW8QwajUTH6zdnu4SVNx7+7SU/hKeARQg3LiqLxkgLfNdguu\nQJd5o4k/5E3gmNC8YanHBvzvQZLGoAYsrpv0j5k4qFVf17ZkYOF9k2j//9Lr\ns5xbhOmL6I9dbhTh4XLsVqlWXye1VlGlW43CXe1cBTw70L1BdRnnj5+bsJYF\nYzupNCP48yzxe25eWPuIdikCCGmTw0h6ievLu4lqILmJZ+AvLHF6cYC4NyPD\n0unv/HQSyA93i4QOOE1jeAAaaDQAT+RP7B5KBSD3E7H38wvI8o5ww2P6usCZ\nR5k1taO6d/Do0WvydFC5ZtIq56XiTqkLdnOF34k0EDj/uvoCaM58p0Cj5S/Y\n8kNaL1Z8ZJZBZCfu7zJD3lRCNjCskVYG6YgRM0D25GNBDCUSOQK+0ztFK9WV\nI1IZ5XM1RgSvBUGeDtTRLJf/SekYaYTonIiQWOaiWLIdOcND/E0EXwvZX07h\nJ7jQQfPhZvd5sUn0elY4MI4OchU/KWDxedqFgWqdAjENl/JZppjF1+MOXL/J\nODAc\r\n=U3MR\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "79ae82e747049ff60309021d79902de6f6590313",
    "tarball": "https://registry.npmjs.org/customize-engine-handlebars/-/customize-engine-handlebars-1.0.3.tgz",
    "unpackedSize": 25097
  },
  "gitHead": "e48526ef3cf858d661ca16868e3ae0bb28aecd20",
  "homepage": "https://github.com/bootprint/customize-engine-handlebars#readme",
  "keywords": [],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "email": "npm@knappi.org",
      "name": "knappi"
    }
  ],
  "name": "customize-engine-handlebars",
  "optionalDependencies": {},
  "peerDependencies": {
    "customize": "^1.0.0"
  },
  "publishConfig": {
    "tag": "patch-1.x"
  },
  "readme": "# customize-engine-handlebars \n\n[![NPM version](https://img.shields.io/npm/v/customize-engine-handlebars.svg)](https://npmjs.com/package/customize-engine-handlebars)\n[![Travis Build Status](https://travis-ci.org/bootprint/customize-engine-handlebars.svg?branch=master)](https://travis-ci.org/bootprint/customize-engine-handlebars)\n[![Coverage Status](https://img.shields.io/coveralls/bootprint/customize-engine-handlebars.svg)](https://coveralls.io/r/bootprint/customize-engine-handlebars)\n\n> Use handlebars as engine for customize\n\n\n# Installation\n\n```\nnpm install customize-engine-handlebars\n```\n\n## Usage\n\nThe following example demonstrates how to use this module:\n\n<pre><code>\n├── config-module.js\n├── example-merge.js\n├── example-partial-names.js\n├── example.js\n├── hb-helpers.js\n├── hb-preprocessor.js\n├─┬ partials/\n│ └── footer.hbs\n├─┬ partials2/\n│ └── footer.hbs\n└─┬ templates/\n  ├── text1.txt.hbs\n  └── text2.txt.hbs\n</code></pre>\n\n### Configuration\n\nThe following usage example has a configuration for all possible properties\nof the Handlebars-engine:\n\n```js\nvar customize = require('customize')\ncustomize()\n  .registerEngine('handlebars', require('customize-engine-handlebars'))\n  .load(require('./config-module.js'))\n  .run()\n  .done(console.log)\n```\n\nThis example loads its configuration from the module `config-module.js`\n\n```js\nmodule.exports = function (customize) {\n  return customize.merge({\n    handlebars: {\n      // Directory containing templates\n      templates: 'templates',\n      // Directory containing partials\n      partials: 'partials',\n      // JS-file exporting Handlebars helper-functions\n      helpers: 'hb-helpers.js',\n      // JS-file exporting a preprocessor function\n      preprocessor: 'hb-preprocessor.js',\n      // Input data for Handlebars\n      data: {\n        name: 'nknapp',\n        city: 'Darmstadt'\n      }\n    }\n  })\n}\n\n```\n\n\n*A quick note: If your are really creating a configuration-module, you should always\nuse `require.resolve` or `__dirname` to determine the correct path to referenced files.*\n\nAll the templates in the `templates` directory are called with the provided `data` (name and city).\nEach one generates an entry in the result of the engine. The templates call a partial that is \ninserted below the main content. Helper functions from the `hb-helpers.js`-file are registered \nwith Handlebars and `text2.txt.hbs` uses the `shout`-helper from `hb-helpers.js` to turn a \nstring into upper-case. \n\n```hbs\nI'm {{name}}\n\nI'm living in {{shout city}}.\n\n{{>footer}}\n```\n\n\nThe example also includes a preprocessor (`hb-preprocessor.js`) that calls \n[the github API](https://developer.github.com/v3/users/#get-a-single-user)\nto retrieve information about the user. \n\n```js\nmodule.exports = function (data) {\n  var url = 'https://api.github.com/users/' + data.name\n  console.log(url)\n  return {\n    name: data.name,\n    city: data.city,\n    github: require('get-promise')('https://api.github.com/users/nknapp', {\n      headers: {\n        'User-Agent': 'Node'\n      }\n    }).get('data').then(JSON.parse)\n  }\n}\n\n```\n\n\nThe result is injected into the data as `github` property and rendered by \nthe `footer.hbs` partial.\n\n```hbs\n------\nGithub-Name: {{{github.name}}}\n```\n\n\nThe output of this example is:\n\n```\nhttps://api.github.com/users/nknapp\n{ handlebars:\n   { 'text1.txt':\n      'I\\'m nknapp\\n\\nI\\'m living in Darmstadt.\\n\\n------\\nGithub-Name: Nils Knappmeier',\n     'text2.txt':\n      'I\\'m nknapp\\n\\nI\\'m living in DARMSTADT.\\n\\n------\\nGithub-Name: Nils Knappmeier' } }\n```\n\n\n### Customizing configurations\n\nWe can use the mechanism of [customize](https://npmjs.com/package/customize) to adapt the configuration.\nIn the following example, we replace the `footer.hbs`-partial by a different version.\nWe do this by specifying a new partial directory. Partials with the same name as in \nthe previous directory will overwrite the old one.\n\n```js\nvar customize = require('customize')\ncustomize()\n  .registerEngine('handlebars', require('customize-engine-handlebars'))\n  .load(require('./config-module.js'))\n  .merge({\n    handlebars: {\n      partials: 'partials2'\n    }\n  })\n  .run()\n  .done(console.log)\n```\n\nThe new `footer.hbs` writes only the current temperature, instead of the weather description\n\n```hbs\n------\nBlog: {{{github.blog}}}\n```\n\n\nThe output of this example is\n\n```\nhttps://api.github.com/users/nknapp\n{ handlebars:\n   { 'text1.txt':\n      'I\\'m nknapp\\n\\nI\\'m living in Darmstadt.\\n\\n------\\nBlog: https://blog.knappi.org',\n     'text2.txt':\n      'I\\'m nknapp\\n\\nI\\'m living in DARMSTADT.\\n\\n------\\nBlog: https://blog.knappi.org' } }\n```\n\nIn a similar fashion, we could replace other parts of the configuration, like templates, helpers\nand the pre-processor. If we would provide a new preprocessor, it could call the old one,\nby calling `this.parent(args)`\n\n### Which partial generates what?\n\nWhen we want to overriding parts of the output, we are looking for the correct partial to do so. \nFor this purpose, the engine allows to specify a \"wrapper function\" for partials. This function\nis called with the contents and the name of a partial and returns the new content. Programs like\n`Thought` can optionally include the partial names into the output to show the user which partial\nto override in order to modify a given part of the output.\n\n\n```js\nvar customize = require('customize')\ncustomize()\n  .registerEngine('handlebars', require('customize-engine-handlebars'))\n  .load(require('./config-module.js'))\n  .merge({\n    handlebars: {\n      partials: 'partials2',\n      partialWrapper: function (contents, name) {\n        return '[BEGIN ' + name + ']\\n' + contents + '[END ' + name + ']'\n      }\n    }\n  })\n  .run()\n  .done(console.log)\n```\n\n```\nhttps://api.github.com/users/nknapp\n{ handlebars:\n   { 'text2.txt':\n      'I\\'m nknapp\\n\\nI\\'m living in DARMSTADT.\\n\\n[BEGIN footer]\\n------\\nBlog: https://blog.knappi.org[END footer]',\n     'text1.txt':\n      'I\\'m nknapp\\n\\nI\\'m living in Darmstadt.\\n\\n[BEGIN footer]\\n------\\nBlog: https://blog.knappi.org[END footer]' } }\n```\n\n### Accessing engine and configuration helpers\n\nThe configuration and the engine itself is passed as additional parameter into each helper call:\n\n```\nmodule.exports = {\n    function(value, options, customizeConfig) {\n        console.log(\"handlebars\", custOptions.engine)\n        console.log(\"customizeConfig\", custOptions.config)\n    }\n}\n```\n\n### Asynchronous helpers\n\nThe `customize-engine-handlebars` uses the [promised-handlebars](https://npmjs.com/package/promised-handlebars) package as wrapper around Handlebars.\nIt allows helpers to return promises instead of real values.\n\n\n\n\n\n\n# License\n\n`customize-engine-handlebars` is published under the MIT-license.\n\nSee [LICENSE.md](LICENSE.md) for details.\n\n\n# Release-Notes\n \nFor release notes, see [CHANGELOG.md](CHANGELOG.md)\n \n# Contributing guidelines\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md).",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bootprint/customize-engine-handlebars.git"
  },
  "scripts": {
    "format": "standard --fix",
    "prethoughtcheck": "thought --version || npm -g install thought",
    "preversion": "npm run thoughtcheck",
    "test": "mocha && standard",
    "thought": "thought run -a",
    "thoughtcheck": "thought check-engines",
    "version": "thoughtful changelog -o -a && npm run thought"
  },
  "standard": {
    "ignore": [
      "test/fixtures/**"
    ]
  },
  "version": "1.0.3"
}
